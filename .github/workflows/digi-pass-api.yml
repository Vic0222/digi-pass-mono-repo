name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    defaults:
      run:
        working-directory: ./digi-pass
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-build-cache

    - name: Build lambda
      run: |
          pip install cargo-lambda
          cargo lambda build --release --arm64 
    - uses: actions/upload-artifact@v4
      with:
        path: ./digi-pass/target/lambda/

  deploy:
    defaults:
      run:
        working-directory: ./digi-pass/aws
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: aws-actions/setup-sam@v2
    - uses: actions/download-artifact@v4.1.4
      with: 
        path: ../digi-pass/target/lambda/
    - name: Deploy lambda
      run: |
          aws cloudformation package  --template ./template.yml --s3-bucket digipass.deployment --output-template-file packaged-template.yml
          aws cloudformation update-stack --stack-name digi-pass-api --template-body file://packaged-template.yml --capabilities CAPABILITY_AUTO_EXPAND, CAPABILITY_IAM
